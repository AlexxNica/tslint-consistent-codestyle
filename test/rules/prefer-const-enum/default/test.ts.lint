enum Empty {}
~~~~~~~~~~ [fail]

enum Foo {
~~~~~~~~ [fail]
    bar,
    baz,
}
bar = Foo.bar;
baz = Foo['baz'];

enum Foo {
~~~~~~~~ [fail]
    foo = 2,
}

enum Foo2 {
    bar,
    baz = foo,
}

enum Foo2 {
    foo = 3,
}

enum Bar {
~~~~~~~~ [fail]
    foo = 1,
    bar = 1 + 1,
    baz = 1 << 1,
}

const enum ConstBar {
}

enum Baz {
~~~~~~~~ [fail]
    'foo',
    bar = foo,
    ['baz'] = Baz.bar,
    bas = Baz['baz'],
    quux = bas + Baz.baz | Baz['foo'] + ~~bar & (Foo.bar - Foo2.bar),
}

enum Baz2 {
    foo = Foo2.baz,
}

enum Bas {
    foo,
}

enum Bas2 {
    foo = Bas[foo],
}

export enum ExportedEnum {}

enum Split {
~~~~~~~~~~ [fail]
    Foo,
    Bar,
}

enum Split {
~~~~~~~~~~ [fail]
    Baz = Foo,
}

export = Split;

enum NumberAccess {
    Foo,
}
NumberAccess[0];

enum Assigned {}
foo = Assigned;

enum TemplateAccess {
    Bar,
}
foo = TemplateAccess[`Bar`];

enum Parameter {}
foo(Parameter);

enum Paren {
    Bar,
    Baz = (Paren).Bar,
}

enum Paren2 {
    Bar,
}
foo = (Paren2).Bar;

[fail]: enum can be declared const